# Function to input a fuzzy set
def input_fuzzy_set(set_name):
    n = int(input(f"\nEnter the number of elements in {set_name}: "))
    fuzzy_set = {}
    print(f"Enter elements for {set_name}:")
    for i in range(1, n + 1):
        element = input(f"Enter element {i} name: ")
        membership = float(input(f"Enter membership value for {element}: "))
        fuzzy_set[element] = membership
    return fuzzy_set

# Union of two fuzzy sets
def union(A, B):
    result = {}
    for key in A.keys() | B.keys():
        result[key] = max(A.get(key, 0), B.get(key, 0))
    return result

# Intersection of two fuzzy sets
def intersection(A, B):
    result = {}
    for key in A.keys() & B.keys():
        result[key] = min(A[key], B[key])
    return result

# Complement of a fuzzy set
def complement(A):
    return {key: 1 - value for key, value in A.items()}

# Function to verify De Morganâ€™s Law
def verify_de_morgan(A, B):
    lhs = complement(intersection(A, B))
    rhs = union(complement(A), complement(B))
    print("\nDe Morgan's Law:")
    print(f"LHS (Complement of Intersection) = {lhs}")
    print(f"RHS (Union of Complements) = {rhs}")
    if lhs == rhs:
        print("De Morgan's Law holds true for the given fuzzy sets")
    else:
        print("De Morgan's Law does NOT hold true for the given fuzzy sets")

# Main Program
print("----- Input for Fuzzy Set A -----")
fuzzy_set_A = input_fuzzy_set("Fuzzy Set A")

print("\n----- Input for Fuzzy Set B -----")
fuzzy_set_B = input_fuzzy_set("Fuzzy Set B")

print("\nFuzzy Set A:", fuzzy_set_A)
print("Fuzzy Set B:", fuzzy_set_B)

union_result = union(fuzzy_set_A, fuzzy_set_B)
print("\nUnion of A and B:", union_result)

intersection_result = intersection(fuzzy_set_A, fuzzy_set_B)
print("Intersection of A and B:", intersection_result)

complement_A = complement(fuzzy_set_A)
print("Complement of A:", complement_A)

complement_B = complement(fuzzy_set_B)
print("Complement of B:", complement_B)

verify_de_morgan(fuzzy_set_A, fuzzy_set_B)
